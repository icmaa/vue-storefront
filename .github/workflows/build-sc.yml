name: Continuous Delivery (SC)

on:
  push:
    branches:
      - master
      - master-*
      - develop
      - develop-*
      - build/*
    paths-ignore:
      - '**/*.md'

jobs:

  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    strategy:
      matrix:
        env:
          - MANDANT: imp

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Install
        uses: bahmutov/npm-install@v1

      - name: Get repository name, and branch name
        run: |
          echo "APP=$(echo ${GITHUB_REPOSITORY##*/})" >> $GITHUB_ENV
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Get environment by branch
        run: |
          echo "ENV=$(if [[ ${{ env.BRANCH_NAME }} =~ ^master ]]; then echo "production"; else echo "test"; fi)" >> $GITHUB_ENV

      - name: Checkout "icmaa/shop-workspace" repo
        run: |
          rm -rf shop-workspace
          export CONFIG_BRANCH=$(if [[ ! ${{ env.BRANCH_NAME }} =~ ^master ]]; then echo "-b develop"; fi)
          git clone --no-tags --depth 1 https://${{ secrets.PAT }}@github.com/icmaa/shop-workspace $CONFIG_BRANCH

      - name: Sync config JSON files
        run: rsync -r ./shop-workspace/template/${{ env.APP }}/ ./

      - name: Build "${{ env.APP }}"
        run: yarn build
        env:
          NODE_CONFIG_ENV: ${{ env.ENV }}
          NODE_APP_INSTANCE: ${{ matrix.env.MANDANT }}

      - name: Zip build
        run: |
          mkdir builds
          zip -r builds/${{ env.APP }}-${{ matrix.env.MANDANT }}-${{ env.ENV }}-latest.zip $(cat .build-files) > /dev/null 2>&1
          cp builds/${{ env.APP }}-${{ matrix.env.MANDANT }}-${{ env.ENV }}-latest.zip builds/${{ env.APP }}-${{ matrix.env.MANDANT }}-${{ env.ENV }}-$(date '+%Y%m%d-%H%M%S').zip
          [[ "${{ env.BRANCH_NAME }}" =~ ^master && ! "${{ env.BRANCH_NAME }}" =~ ^master$ ]] && (echo "Remove latest build" && rm builds/${{ env.APP }}-${{ matrix.env.MANDANT }}-${{ env.ENV }}-latest.zip) || echo "Keep latest build"

      - name: Upload binary to S3 bucket
        uses: jakejarvis/s3-sync-action@master
        env:
          SOURCE_DIR: builds/
          AWS_REGION: 'us-east-1'
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
