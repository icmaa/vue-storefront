name: Continuous Integration

on:
  push:
    # paths:
    #   - 'core/**'
    #   - 'packages/**'
    #   - 'src/**'

env:
  NODE_APP_INSTANCE: "imp"
  NODE_CONFIG_ENV: "test"
  NODE_TLS_REJECT_UNAUTHORIZED: 0
  CI_TESTS: true

jobs:

  # test-lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v1
  #     - name: Run ESlint
  #       run: |
  #         yarn
  #         yarn lint

  # test-unit:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v1
  #     - name: Checkout "icmaa/vue-storefront-workspace" repo
  #       run: |
  #         git clone --no-tags --depth 1 https://${{ secrets.GITHUB_PAT }}@github.com/icmaa/vue-storefront-workspace
  #     - name: Sync config JSON files
  #       run: rsync -r ./vue-storefront-workspace/template/vue-storefront/ ./
  #     - name: Run Jest-Unit-Tests
  #       run: |
  #         yarn
  #         yarn test:unit

  tests-e2e-build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: "Cache: yarn"
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: "Cache: node_modules"
        uses: actions/cache@v1
        with:
          path: node_modules
          key: nodemodules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: "Cache: build"
        uses: actions/cache@v1
        with:
          path: ./
          key: build-${{ runner.os }}-${{ github.sha }}

      - name: Checkout "icmaa/vue-storefront-workspace" repo
        run: |
          git clone --no-tags --depth 1 https://${{ secrets.GITHUB_PAT }}@github.com/icmaa/vue-storefront-workspace

      - name: Sync config JSON files
        run: rsync -r ./vue-storefront-workspace/template/vue-storefront/ ./
      
      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

  tests-e2e:
    needs: tests-e2e-build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        containers: [ 'runner-1', 'runner-2', 'runner-3', 'runner-4', 'runner-5' ]

    services:
      redis:
        image: redis
        ports:
        - 6379:6379
        options: --entrypoint redis-server

    steps:
      - uses: actions/setup-node@v1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: "Cache: yarn"
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: "Cache: node_modules"
        uses: actions/cache@v1
        with:
          path: node_modules
          key: nodemodules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: "Cache: build"
        uses: actions/cache@v1
        with:
          path: ./
          key: build-${{ runner.os }}-${{ github.sha }}

      - name: Install deps and start
        run: |
          yarn
          yarn pm2 start ecosystem.ci.json

      - name: Cypress run
        uses: cypress-io/github-action@v1
        timeout-minutes: 5
        with:
          cache-key: cypress-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
          working-directory: src/themes/icmaa-imp/test/e2e
          wait-on: http://localhost:3000
          wait-on-timeout: 120
          browser: chrome
          headless: true
          record: true
          parallel: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_RECORD_KEY}}
          CYPRESS_PROJECT_ID: ${{secrets.CYPRESS_PROJECT_ID}}
