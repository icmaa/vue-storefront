name: Continuous Integration

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

env:
  NODE_APP_INSTANCE: "imp"
  NODE_CONFIG_ENV: "test"
  NODE_TLS_REJECT_UNAUTHORIZED: 0
  CI_TESTS: true
  BUILD_CACHE_DIRS: |
    dist
    var
    build/config.json
    core/build/config.json
    core/build/cache-version.json
    src/**/i18n.json
    core/resource/i18n/*.json

jobs:

  test-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '13.x'

      - name: Run ESlint
        run: |
          yarn
          yarn lint

  test-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '13.x'

      - name: Get yarn cache directory path
        run: echo ::set-env name=YARN_CACHE_DIR::$(yarn cache dir)
      - name: "Cache: node_modules"
        uses: actions/cache@master
        with:
          path: |
            node_modules
            ${{ env.YARN_CACHE_DIR }}
          key: nodemodules-${{ hashFiles('yarn.lock') }}
      - name: "Cache: build"
        uses: actions/cache@master
        with:
          path: ${{ env.BUILD_CACHE_DIRS }}
          key: build-${{ github.sha }}

      - name: Checkout "icmaa/vue-storefront-workspace" repo
        run: |
          rm -rf vue-storefront-workspace
          git clone --no-tags --depth 1 https://${{ secrets.GITHUB_PAT }}@github.com/icmaa/vue-storefront-workspace

      - name: Sync config JSON files
        run: rsync -r ./vue-storefront-workspace/template/vue-storefront/ ./

      - name: Run Jest-Unit-Tests
        run: |
          yarn
          yarn test:unit

  tests-e2e-build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '13.x'

      - name: Get yarn cache directory path
        run: echo ::set-env name=YARN_CACHE_DIR::$(yarn cache dir)
      - name: "Cache: node_modules"
        uses: actions/cache@master
        with:
          path: |
            node_modules
            ${{ env.YARN_CACHE_DIR }}
          key: nodemodules-${{ hashFiles('yarn.lock') }}
      - name: "Cache: build"
        uses: actions/cache@master
        with:
          path: ${{ env.BUILD_CACHE_DIRS }}
          key: build-${{ github.sha }}

      - name: Checkout "icmaa/vue-storefront-workspace" repo
        run: |
          rm -rf vue-storefront-workspace
          git clone --no-tags --depth 1 https://${{ secrets.GITHUB_PAT }}@github.com/icmaa/vue-storefront-workspace

      - name: Sync config JSON files
        run: rsync -r ./vue-storefront-workspace/template/vue-storefront/ ./

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

  tests-e2e:
    needs: tests-e2e-build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        containers: [ 'runner-1', 'runner-2', 'runner-3', 'runner-4', 'runner-5' ]

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '13.x'

      - name: Get yarn cache directory path
        run: echo ::set-env name=YARN_CACHE_DIR::$(yarn cache dir)
      - name: "Cache: node_modules"
        uses: actions/cache@master
        with:
          path: |
            node_modules
            ${{ env.YARN_CACHE_DIR }}
          key: nodemodules-${{ hashFiles('yarn.lock') }}
      - name: "Cache: build"
        uses: actions/cache@master
        with:
          path: ${{ env.BUILD_CACHE_DIRS }}
          key: build-${{ github.sha }}

      - name: Install deps and start
        run: |
          yarn
          yarn pm2 start ecosystem.ci.json

      - name: Cypress run
        uses: cypress-io/github-action@v1
        timeout-minutes: 5
        with:
          build: yarn cypress install
          working-directory: src/themes/icmaa-imp/test/e2e
          wait-on: http://localhost:3000
          wait-on-timeout: 120
          browser: chrome
          headless: true
          record: true
          parallel: true
          config: video=true
          group: ${{ runner.os }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{secrets.CYPRESS_RECORD_KEY}}
          CYPRESS_PROJECT_ID: ${{secrets.CYPRESS_PROJECT_ID}}

      - name: Dump and consolidate log outputs
        if: failure()
        run: |
          mkdir artifacts
          yarn pm2 logs --format --nostream --lines 10000000 > artifacts/server.log
          zip -r artifacts/build.zip ./ -x "*node_modules/**/*" -x ".git/**/*"

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: build
          path: artifacts
